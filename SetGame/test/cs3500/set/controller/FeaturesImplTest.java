package cs3500.set.controller;import org.junit.Test;import org.junit.jupiter.api.BeforeEach;import cs3500.set.model.hw02.Card;import cs3500.set.model.hw02.SetGameModel;import cs3500.set.model.hw02.SetThreeGameModel;import cs3500.set.view.MockGuiView;import cs3500.set.view.SetGameGuiView;import static org.junit.Assert.assertEquals;import static org.junit.Assert.assertTrue;/** * Tests the features interface. */public class FeaturesImplTest {  private SetGameModel<Card> model;  private SetGameGuiView view;  private FeaturesInterface controller;  /**   * Sets up the test.   */  @BeforeEach  public void setUp() {    StringBuilder log = new StringBuilder();    model = new SetThreeGameModel();    view = new MockGuiView(log);    controller = new FeaturesImpl(model, view);  }  /**   * Tests the input method for score updates and view refresh.   */  @Test  public void input() {    StringBuilder log = new StringBuilder();    model = new SetThreeGameModel();    model.startGameWithDeck(model.getCompleteDeck(), 3, 3);    view = new MockGuiView(log);    controller = new FeaturesImpl(model, view);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    assertEquals(1, model.getScore());    assertEquals("I refreshed the view", log.toString());    assertEquals(0, model.getClaimsList().size());    controller.input(2, 2);    controller.input(0, 0);    assertEquals(2, model.getClaimsList().size());    controller.input(1, 1);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    assertEquals(6, model.getScore());    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    assertTrue(model.isGameOver());  }  /**   * Tests the play game method with input.   */  @Test  public void testInput() {    StringBuilder log = new StringBuilder();    model = new SetThreeGameModel();    view = new MockGuiView(log);    controller = new FeaturesImpl(model, view);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    assertEquals(1, model.getScore());    assertEquals("I refreshed the view", log.toString());    assertEquals(0, model.getClaimsList().size());    controller.input(2, 2);    controller.input(0, 0);    assertEquals(2, model.getClaimsList().size());    controller.input(1, 1);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    assertEquals(6, model.getScore());    controller.input(1, 1);    controller.input(2, 2);    controller.input(0, 0);    assertTrue(model.isGameOver());  }}